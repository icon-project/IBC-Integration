// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: icon/types/v1/types.proto

package com.icon.types.v1;

/**
 * <pre>
 * BlockIdFlag indicates which BlcokID the signature is for
 * </pre>
 *
 * Protobuf enum {@code icon.types.v1.BlockIDFlag}
 */
public enum BlockIDFlag
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <code>BLOCK_ID_FLAG_UNKNOWN = 0;</code>
   */
  BLOCK_ID_FLAG_UNKNOWN(0),
  /**
   * <code>BLOCK_ID_FLAG_ABSENT = 1;</code>
   */
  BLOCK_ID_FLAG_ABSENT(1),
  /**
   * <code>BLOCK_ID_FLAG_COMMIT = 2;</code>
   */
  BLOCK_ID_FLAG_COMMIT(2),
  /**
   * <code>BLOCK_ID_FLAG_NIL = 3;</code>
   */
  BLOCK_ID_FLAG_NIL(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>BLOCK_ID_FLAG_UNKNOWN = 0;</code>
   */
  public static final int BLOCK_ID_FLAG_UNKNOWN_VALUE = 0;
  /**
   * <code>BLOCK_ID_FLAG_ABSENT = 1;</code>
   */
  public static final int BLOCK_ID_FLAG_ABSENT_VALUE = 1;
  /**
   * <code>BLOCK_ID_FLAG_COMMIT = 2;</code>
   */
  public static final int BLOCK_ID_FLAG_COMMIT_VALUE = 2;
  /**
   * <code>BLOCK_ID_FLAG_NIL = 3;</code>
   */
  public static final int BLOCK_ID_FLAG_NIL_VALUE = 3;


  @java.lang.Override
  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static BlockIDFlag valueOf(int value) {
    return forNumber(value);
  }

  public static BlockIDFlag forNumber(int value) {
    switch (value) {
      case 0: return BLOCK_ID_FLAG_UNKNOWN;
      case 1: return BLOCK_ID_FLAG_ABSENT;
      case 2: return BLOCK_ID_FLAG_COMMIT;
      case 3: return BLOCK_ID_FLAG_NIL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<BlockIDFlag>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      BlockIDFlag> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<BlockIDFlag>() {
          @java.lang.Override
          public BlockIDFlag findValueByNumber(int number) {
            return BlockIDFlag.forNumber(number);
          }
        };

  public static com.google.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return BlockIDFlagVerifier.INSTANCE;
  }

  private static final class BlockIDFlagVerifier implements 
       com.google.protobuf.Internal.EnumVerifier { 
          static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new BlockIDFlagVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return BlockIDFlag.forNumber(number) != null;
          }
        };

  private final int value;

  private BlockIDFlag(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:icon.types.v1.BlockIDFlag)
}

