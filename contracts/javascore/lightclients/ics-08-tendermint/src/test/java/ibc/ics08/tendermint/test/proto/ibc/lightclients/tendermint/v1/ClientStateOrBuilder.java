// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clients/tendermint/TendermintLight.proto

package com.ibc.lightclients.tendermint.v1;

public interface ClientStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ibc.lightclients.tendermint.v1.ClientState)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <code>string chain_id = 1 [json_name = "chainId"];</code>
   * @return The chainId.
   */
  java.lang.String getChainId();
  /**
   * <code>string chain_id = 1 [json_name = "chainId"];</code>
   * @return The bytes for chainId.
   */
  com.google.protobuf.ByteString
      getChainIdBytes();

  /**
   * <code>.ibc.lightclients.tendermint.v1.Fraction trust_level = 2 [json_name = "trustLevel", (.gogoproto.nullable) = false];</code>
   * @return Whether the trustLevel field is set.
   */
  boolean hasTrustLevel();
  /**
   * <code>.ibc.lightclients.tendermint.v1.Fraction trust_level = 2 [json_name = "trustLevel", (.gogoproto.nullable) = false];</code>
   * @return The trustLevel.
   */
  com.ibc.lightclients.tendermint.v1.Fraction getTrustLevel();

  /**
   * <pre>
   * duration of the period since the LastestTimestamp during which the
   * submitted headers are valid for upgrade
   * </pre>
   *
   * <code>.google.protobuf.Duration trusting_period = 3 [json_name = "trustingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
   * @return Whether the trustingPeriod field is set.
   */
  boolean hasTrustingPeriod();
  /**
   * <pre>
   * duration of the period since the LastestTimestamp during which the
   * submitted headers are valid for upgrade
   * </pre>
   *
   * <code>.google.protobuf.Duration trusting_period = 3 [json_name = "trustingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
   * @return The trustingPeriod.
   */
  com.google.protobuf.Duration getTrustingPeriod();

  /**
   * <pre>
   * duration of the staking unbonding period
   * </pre>
   *
   * <code>.google.protobuf.Duration unbonding_period = 4 [json_name = "unbondingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
   * @return Whether the unbondingPeriod field is set.
   */
  boolean hasUnbondingPeriod();
  /**
   * <pre>
   * duration of the staking unbonding period
   * </pre>
   *
   * <code>.google.protobuf.Duration unbonding_period = 4 [json_name = "unbondingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
   * @return The unbondingPeriod.
   */
  com.google.protobuf.Duration getUnbondingPeriod();

  /**
   * <pre>
   * defines how much new (untrusted) header's Time can drift into the future.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_clock_drift = 5 [json_name = "maxClockDrift", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
   * @return Whether the maxClockDrift field is set.
   */
  boolean hasMaxClockDrift();
  /**
   * <pre>
   * defines how much new (untrusted) header's Time can drift into the future.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_clock_drift = 5 [json_name = "maxClockDrift", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
   * @return The maxClockDrift.
   */
  com.google.protobuf.Duration getMaxClockDrift();

  /**
   * <pre>
   * Block height when the client was frozen due to a misbehaviour
   * </pre>
   *
   * <code>.ibc.core.client.v1.Height frozen_height = 6 [json_name = "frozenHeight", (.gogoproto.nullable) = false];</code>
   * @return Whether the frozenHeight field is set.
   */
  boolean hasFrozenHeight();
  /**
   * <pre>
   * Block height when the client was frozen due to a misbehaviour
   * </pre>
   *
   * <code>.ibc.core.client.v1.Height frozen_height = 6 [json_name = "frozenHeight", (.gogoproto.nullable) = false];</code>
   * @return The frozenHeight.
   */
  com.ibc.core.client.v1.Height getFrozenHeight();

  /**
   * <pre>
   * Latest height the client was updated to
   * </pre>
   *
   * <code>.ibc.core.client.v1.Height latest_height = 7 [json_name = "latestHeight", (.gogoproto.nullable) = false];</code>
   * @return Whether the latestHeight field is set.
   */
  boolean hasLatestHeight();
  /**
   * <pre>
   * Latest height the client was updated to
   * </pre>
   *
   * <code>.ibc.core.client.v1.Height latest_height = 7 [json_name = "latestHeight", (.gogoproto.nullable) = false];</code>
   * @return The latestHeight.
   */
  com.ibc.core.client.v1.Height getLatestHeight();

  /**
   * <pre>
   * Proof specifications used in verifying counterparty state
   * </pre>
   *
   * <code>repeated .cosmos.ics23.v1.ProofSpec proof_specs = 8 [json_name = "proofSpecs"];</code>
   */
  java.util.List<com.cosmos.ics23.v1.ProofSpec> 
      getProofSpecsList();
  /**
   * <pre>
   * Proof specifications used in verifying counterparty state
   * </pre>
   *
   * <code>repeated .cosmos.ics23.v1.ProofSpec proof_specs = 8 [json_name = "proofSpecs"];</code>
   */
  com.cosmos.ics23.v1.ProofSpec getProofSpecs(int index);
  /**
   * <pre>
   * Proof specifications used in verifying counterparty state
   * </pre>
   *
   * <code>repeated .cosmos.ics23.v1.ProofSpec proof_specs = 8 [json_name = "proofSpecs"];</code>
   */
  int getProofSpecsCount();

  /**
   * <pre>
   * Path at which next upgraded client will be committed.
   * Each element corresponds to the key for a single CommitmentProof in the
   * chained proof. NOTE: ClientState must stored under
   * `{upgradePath}/{upgradeHeight}/clientState` ConsensusState must be stored
   * under `{upgradepath}/{upgradeHeight}/consensusState` For SDK chains using
   * the default upgrade module, upgrade_path should be []string{"upgrade",
   * "upgradedIBCState"}`
   * </pre>
   *
   * <code>repeated string upgrade_path = 9 [json_name = "upgradePath"];</code>
   * @return A list containing the upgradePath.
   */
  java.util.List<java.lang.String>
      getUpgradePathList();
  /**
   * <pre>
   * Path at which next upgraded client will be committed.
   * Each element corresponds to the key for a single CommitmentProof in the
   * chained proof. NOTE: ClientState must stored under
   * `{upgradePath}/{upgradeHeight}/clientState` ConsensusState must be stored
   * under `{upgradepath}/{upgradeHeight}/consensusState` For SDK chains using
   * the default upgrade module, upgrade_path should be []string{"upgrade",
   * "upgradedIBCState"}`
   * </pre>
   *
   * <code>repeated string upgrade_path = 9 [json_name = "upgradePath"];</code>
   * @return The count of upgradePath.
   */
  int getUpgradePathCount();
  /**
   * <pre>
   * Path at which next upgraded client will be committed.
   * Each element corresponds to the key for a single CommitmentProof in the
   * chained proof. NOTE: ClientState must stored under
   * `{upgradePath}/{upgradeHeight}/clientState` ConsensusState must be stored
   * under `{upgradepath}/{upgradeHeight}/consensusState` For SDK chains using
   * the default upgrade module, upgrade_path should be []string{"upgrade",
   * "upgradedIBCState"}`
   * </pre>
   *
   * <code>repeated string upgrade_path = 9 [json_name = "upgradePath"];</code>
   * @param index The index of the element to return.
   * @return The upgradePath at the given index.
   */
  java.lang.String getUpgradePath(int index);
  /**
   * <pre>
   * Path at which next upgraded client will be committed.
   * Each element corresponds to the key for a single CommitmentProof in the
   * chained proof. NOTE: ClientState must stored under
   * `{upgradePath}/{upgradeHeight}/clientState` ConsensusState must be stored
   * under `{upgradepath}/{upgradeHeight}/consensusState` For SDK chains using
   * the default upgrade module, upgrade_path should be []string{"upgrade",
   * "upgradedIBCState"}`
   * </pre>
   *
   * <code>repeated string upgrade_path = 9 [json_name = "upgradePath"];</code>
   * @param index The index of the element to return.
   * @return The upgradePath at the given index.
   */
  com.google.protobuf.ByteString
      getUpgradePathBytes(int index);

  /**
   * <pre>
   * allow_update_after_expiry is deprecated
   * </pre>
   *
   * <code>bool allow_update_after_expiry = 10 [json_name = "allowUpdateAfterExpiry", deprecated = true];</code>
   * @deprecated ibc.lightclients.tendermint.v1.ClientState.allow_update_after_expiry is deprecated.
   *     See clients/tendermint/TendermintLight.proto;l=47
   * @return The allowUpdateAfterExpiry.
   */
  @java.lang.Deprecated boolean getAllowUpdateAfterExpiry();

  /**
   * <pre>
   * allow_update_after_misbehaviour is deprecated
   * </pre>
   *
   * <code>bool allow_update_after_misbehaviour = 11 [json_name = "allowUpdateAfterMisbehaviour", deprecated = true];</code>
   * @deprecated ibc.lightclients.tendermint.v1.ClientState.allow_update_after_misbehaviour is deprecated.
   *     See clients/tendermint/TendermintLight.proto;l=49
   * @return The allowUpdateAfterMisbehaviour.
   */
  @java.lang.Deprecated boolean getAllowUpdateAfterMisbehaviour();
}
