// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tendermint/crypto/keys.proto

package com.tendermint.crypto;

/**
 * <pre>
 * PublicKey defines the keys available for use with Validators
 * </pre>
 *
 * Protobuf type {@code tendermint.crypto.PublicKey}
 */
public  final class PublicKey extends
    com.google.protobuf.GeneratedMessageLite<
        PublicKey, PublicKey.Builder> implements
    // @@protoc_insertion_point(message_implements:tendermint.crypto.PublicKey)
    PublicKeyOrBuilder {
  private PublicKey() {
  }
  private int sumCase_ = 0;
  private java.lang.Object sum_;
  public enum SumCase {
    ED25519(1),
    SECP256K1(2),
    SUM_NOT_SET(0);
    private final int value;
    private SumCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SumCase valueOf(int value) {
      return forNumber(value);
    }

    public static SumCase forNumber(int value) {
      switch (value) {
        case 1: return ED25519;
        case 2: return SECP256K1;
        case 0: return SUM_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public SumCase
  getSumCase() {
    return SumCase.forNumber(
        sumCase_);
  }

  private void clearSum() {
    sumCase_ = 0;
    sum_ = null;
  }

  public static final int ED25519_FIELD_NUMBER = 1;
  /**
   * <code>bytes ed25519 = 1 [json_name = "ed25519"];</code>
   * @return Whether the ed25519 field is set.
   */
  @java.lang.Override
  public boolean hasEd25519() {
    return sumCase_ == 1;
  }
  /**
   * <code>bytes ed25519 = 1 [json_name = "ed25519"];</code>
   * @return The ed25519.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getEd25519() {
    if (sumCase_ == 1) {
      return (com.google.protobuf.ByteString) sum_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }
  /**
   * <code>bytes ed25519 = 1 [json_name = "ed25519"];</code>
   * @param value The ed25519 to set.
   */
  private void setEd25519(com.google.protobuf.ByteString value) {
    java.lang.Class<?> valueClass = value.getClass();
  sumCase_ = 1;
    sum_ = value;
  }
  /**
   * <code>bytes ed25519 = 1 [json_name = "ed25519"];</code>
   */
  private void clearEd25519() {
    if (sumCase_ == 1) {
      sumCase_ = 0;
      sum_ = null;
    }
  }

  public static final int SECP256K1_FIELD_NUMBER = 2;
  /**
   * <code>bytes secp256k1 = 2 [json_name = "secp256k1"];</code>
   * @return Whether the secp256k1 field is set.
   */
  @java.lang.Override
  public boolean hasSecp256K1() {
    return sumCase_ == 2;
  }
  /**
   * <code>bytes secp256k1 = 2 [json_name = "secp256k1"];</code>
   * @return The secp256k1.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSecp256K1() {
    if (sumCase_ == 2) {
      return (com.google.protobuf.ByteString) sum_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }
  /**
   * <code>bytes secp256k1 = 2 [json_name = "secp256k1"];</code>
   * @param value The secp256k1 to set.
   */
  private void setSecp256K1(com.google.protobuf.ByteString value) {
    java.lang.Class<?> valueClass = value.getClass();
  sumCase_ = 2;
    sum_ = value;
  }
  /**
   * <code>bytes secp256k1 = 2 [json_name = "secp256k1"];</code>
   */
  private void clearSecp256K1() {
    if (sumCase_ == 2) {
      sumCase_ = 0;
      sum_ = null;
    }
  }

  public static com.tendermint.crypto.PublicKey parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.tendermint.crypto.PublicKey parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.tendermint.crypto.PublicKey parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.tendermint.crypto.PublicKey parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.tendermint.crypto.PublicKey parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.tendermint.crypto.PublicKey parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.tendermint.crypto.PublicKey parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.tendermint.crypto.PublicKey parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.tendermint.crypto.PublicKey parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.tendermint.crypto.PublicKey parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.tendermint.crypto.PublicKey parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.tendermint.crypto.PublicKey parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.tendermint.crypto.PublicKey prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * PublicKey defines the keys available for use with Validators
   * </pre>
   *
   * Protobuf type {@code tendermint.crypto.PublicKey}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.tendermint.crypto.PublicKey, Builder> implements
      // @@protoc_insertion_point(builder_implements:tendermint.crypto.PublicKey)
      com.tendermint.crypto.PublicKeyOrBuilder {
    // Construct using com.tendermint.crypto.PublicKey.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public SumCase
        getSumCase() {
      return instance.getSumCase();
    }

    public Builder clearSum() {
      copyOnWrite();
      instance.clearSum();
      return this;
    }


    /**
     * <code>bytes ed25519 = 1 [json_name = "ed25519"];</code>
     * @return Whether the ed25519 field is set.
     */
    @java.lang.Override
    public boolean hasEd25519() {
      return instance.hasEd25519();
    }
    /**
     * <code>bytes ed25519 = 1 [json_name = "ed25519"];</code>
     * @return The ed25519.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEd25519() {
      return instance.getEd25519();
    }
    /**
     * <code>bytes ed25519 = 1 [json_name = "ed25519"];</code>
     * @param value The ed25519 to set.
     * @return This builder for chaining.
     */
    public Builder setEd25519(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setEd25519(value);
      return this;
    }
    /**
     * <code>bytes ed25519 = 1 [json_name = "ed25519"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEd25519() {
      copyOnWrite();
      instance.clearEd25519();
      return this;
    }

    /**
     * <code>bytes secp256k1 = 2 [json_name = "secp256k1"];</code>
     * @return Whether the secp256k1 field is set.
     */
    @java.lang.Override
    public boolean hasSecp256K1() {
      return instance.hasSecp256K1();
    }
    /**
     * <code>bytes secp256k1 = 2 [json_name = "secp256k1"];</code>
     * @return The secp256k1.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSecp256K1() {
      return instance.getSecp256K1();
    }
    /**
     * <code>bytes secp256k1 = 2 [json_name = "secp256k1"];</code>
     * @param value The secp256k1 to set.
     * @return This builder for chaining.
     */
    public Builder setSecp256K1(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSecp256K1(value);
      return this;
    }
    /**
     * <code>bytes secp256k1 = 2 [json_name = "secp256k1"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSecp256K1() {
      copyOnWrite();
      instance.clearSecp256K1();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:tendermint.crypto.PublicKey)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.tendermint.crypto.PublicKey();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "sum_",
            "sumCase_",
          };
          java.lang.String info =
              "\u0000\u0002\u0001\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001=\u0000\u0002=" +
              "\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.tendermint.crypto.PublicKey> parser = PARSER;
        if (parser == null) {
          synchronized (com.tendermint.crypto.PublicKey.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.tendermint.crypto.PublicKey>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:tendermint.crypto.PublicKey)
  private static final com.tendermint.crypto.PublicKey DEFAULT_INSTANCE;
  static {
    PublicKey defaultInstance = new PublicKey();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      PublicKey.class, defaultInstance);
  }

  public static com.tendermint.crypto.PublicKey getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<PublicKey> PARSER;

  public static com.google.protobuf.Parser<PublicKey> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

