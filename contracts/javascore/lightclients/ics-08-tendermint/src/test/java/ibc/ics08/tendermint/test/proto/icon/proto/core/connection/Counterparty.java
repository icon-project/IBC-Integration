// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/03-connection/Connection.proto

package com.icon.proto.core.connection;

/**
 * <pre>
 * Counterparty defines the counterparty chain associated with a connection end.
 * </pre>
 *
 * Protobuf type {@code icon.proto.core.connection.Counterparty}
 */
public  final class Counterparty extends
    com.google.protobuf.GeneratedMessageLite<
        Counterparty, Counterparty.Builder> implements
    // @@protoc_insertion_point(message_implements:icon.proto.core.connection.Counterparty)
    CounterpartyOrBuilder {
  private Counterparty() {
    clientId_ = "";
    connectionId_ = "";
  }
  public static final int CLIENT_ID_FIELD_NUMBER = 1;
  private java.lang.String clientId_;
  /**
   * <pre>
   * identifies the client on the counterparty chain associated with a given
   * connection.
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId"];</code>
   * @return The clientId.
   */
  @java.lang.Override
  public java.lang.String getClientId() {
    return clientId_;
  }
  /**
   * <pre>
   * identifies the client on the counterparty chain associated with a given
   * connection.
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId"];</code>
   * @return The bytes for clientId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(clientId_);
  }
  /**
   * <pre>
   * identifies the client on the counterparty chain associated with a given
   * connection.
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId"];</code>
   * @param value The clientId to set.
   */
  private void setClientId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    clientId_ = value;
  }
  /**
   * <pre>
   * identifies the client on the counterparty chain associated with a given
   * connection.
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId"];</code>
   */
  private void clearClientId() {
    
    clientId_ = getDefaultInstance().getClientId();
  }
  /**
   * <pre>
   * identifies the client on the counterparty chain associated with a given
   * connection.
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId"];</code>
   * @param value The bytes for clientId to set.
   */
  private void setClientIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    clientId_ = value.toStringUtf8();
    
  }

  public static final int CONNECTION_ID_FIELD_NUMBER = 2;
  private java.lang.String connectionId_;
  /**
   * <pre>
   * identifies the connection end on the counterparty chain associated with a
   * given connection.
   * </pre>
   *
   * <code>string connection_id = 2 [json_name = "connectionId"];</code>
   * @return The connectionId.
   */
  @java.lang.Override
  public java.lang.String getConnectionId() {
    return connectionId_;
  }
  /**
   * <pre>
   * identifies the connection end on the counterparty chain associated with a
   * given connection.
   * </pre>
   *
   * <code>string connection_id = 2 [json_name = "connectionId"];</code>
   * @return The bytes for connectionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConnectionIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(connectionId_);
  }
  /**
   * <pre>
   * identifies the connection end on the counterparty chain associated with a
   * given connection.
   * </pre>
   *
   * <code>string connection_id = 2 [json_name = "connectionId"];</code>
   * @param value The connectionId to set.
   */
  private void setConnectionId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    connectionId_ = value;
  }
  /**
   * <pre>
   * identifies the connection end on the counterparty chain associated with a
   * given connection.
   * </pre>
   *
   * <code>string connection_id = 2 [json_name = "connectionId"];</code>
   */
  private void clearConnectionId() {
    
    connectionId_ = getDefaultInstance().getConnectionId();
  }
  /**
   * <pre>
   * identifies the connection end on the counterparty chain associated with a
   * given connection.
   * </pre>
   *
   * <code>string connection_id = 2 [json_name = "connectionId"];</code>
   * @param value The bytes for connectionId to set.
   */
  private void setConnectionIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    connectionId_ = value.toStringUtf8();
    
  }

  public static final int PREFIX_FIELD_NUMBER = 3;
  private com.icon.proto.core.commitment.MerklePrefix prefix_;
  /**
   * <pre>
   * commitment merkle prefix of the counterparty chain.
   * </pre>
   *
   * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
   */
  @java.lang.Override
  public boolean hasPrefix() {
    return prefix_ != null;
  }
  /**
   * <pre>
   * commitment merkle prefix of the counterparty chain.
   * </pre>
   *
   * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
   */
  @java.lang.Override
  public com.icon.proto.core.commitment.MerklePrefix getPrefix() {
    return prefix_ == null ? com.icon.proto.core.commitment.MerklePrefix.getDefaultInstance() : prefix_;
  }
  /**
   * <pre>
   * commitment merkle prefix of the counterparty chain.
   * </pre>
   *
   * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
   */
  private void setPrefix(com.icon.proto.core.commitment.MerklePrefix value) {
    value.getClass();
  prefix_ = value;
    
    }
  /**
   * <pre>
   * commitment merkle prefix of the counterparty chain.
   * </pre>
   *
   * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePrefix(com.icon.proto.core.commitment.MerklePrefix value) {
    value.getClass();
  if (prefix_ != null &&
        prefix_ != com.icon.proto.core.commitment.MerklePrefix.getDefaultInstance()) {
      prefix_ =
        com.icon.proto.core.commitment.MerklePrefix.newBuilder(prefix_).mergeFrom(value).buildPartial();
    } else {
      prefix_ = value;
    }
    
  }
  /**
   * <pre>
   * commitment merkle prefix of the counterparty chain.
   * </pre>
   *
   * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
   */
  private void clearPrefix() {  prefix_ = null;
    
  }

  public static com.icon.proto.core.connection.Counterparty parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.icon.proto.core.connection.Counterparty parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.icon.proto.core.connection.Counterparty parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.icon.proto.core.connection.Counterparty parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.icon.proto.core.connection.Counterparty parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.icon.proto.core.connection.Counterparty parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.icon.proto.core.connection.Counterparty parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.icon.proto.core.connection.Counterparty parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.icon.proto.core.connection.Counterparty parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.icon.proto.core.connection.Counterparty parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.icon.proto.core.connection.Counterparty parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.icon.proto.core.connection.Counterparty parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.icon.proto.core.connection.Counterparty prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Counterparty defines the counterparty chain associated with a connection end.
   * </pre>
   *
   * Protobuf type {@code icon.proto.core.connection.Counterparty}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.icon.proto.core.connection.Counterparty, Builder> implements
      // @@protoc_insertion_point(builder_implements:icon.proto.core.connection.Counterparty)
      com.icon.proto.core.connection.CounterpartyOrBuilder {
    // Construct using com.icon.proto.core.connection.Counterparty.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * identifies the client on the counterparty chain associated with a given
     * connection.
     * </pre>
     *
     * <code>string client_id = 1 [json_name = "clientId"];</code>
     * @return The clientId.
     */
    @java.lang.Override
    public java.lang.String getClientId() {
      return instance.getClientId();
    }
    /**
     * <pre>
     * identifies the client on the counterparty chain associated with a given
     * connection.
     * </pre>
     *
     * <code>string client_id = 1 [json_name = "clientId"];</code>
     * @return The bytes for clientId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientIdBytes() {
      return instance.getClientIdBytes();
    }
    /**
     * <pre>
     * identifies the client on the counterparty chain associated with a given
     * connection.
     * </pre>
     *
     * <code>string client_id = 1 [json_name = "clientId"];</code>
     * @param value The clientId to set.
     * @return This builder for chaining.
     */
    public Builder setClientId(
        java.lang.String value) {
      copyOnWrite();
      instance.setClientId(value);
      return this;
    }
    /**
     * <pre>
     * identifies the client on the counterparty chain associated with a given
     * connection.
     * </pre>
     *
     * <code>string client_id = 1 [json_name = "clientId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearClientId() {
      copyOnWrite();
      instance.clearClientId();
      return this;
    }
    /**
     * <pre>
     * identifies the client on the counterparty chain associated with a given
     * connection.
     * </pre>
     *
     * <code>string client_id = 1 [json_name = "clientId"];</code>
     * @param value The bytes for clientId to set.
     * @return This builder for chaining.
     */
    public Builder setClientIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setClientIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * identifies the connection end on the counterparty chain associated with a
     * given connection.
     * </pre>
     *
     * <code>string connection_id = 2 [json_name = "connectionId"];</code>
     * @return The connectionId.
     */
    @java.lang.Override
    public java.lang.String getConnectionId() {
      return instance.getConnectionId();
    }
    /**
     * <pre>
     * identifies the connection end on the counterparty chain associated with a
     * given connection.
     * </pre>
     *
     * <code>string connection_id = 2 [json_name = "connectionId"];</code>
     * @return The bytes for connectionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getConnectionIdBytes() {
      return instance.getConnectionIdBytes();
    }
    /**
     * <pre>
     * identifies the connection end on the counterparty chain associated with a
     * given connection.
     * </pre>
     *
     * <code>string connection_id = 2 [json_name = "connectionId"];</code>
     * @param value The connectionId to set.
     * @return This builder for chaining.
     */
    public Builder setConnectionId(
        java.lang.String value) {
      copyOnWrite();
      instance.setConnectionId(value);
      return this;
    }
    /**
     * <pre>
     * identifies the connection end on the counterparty chain associated with a
     * given connection.
     * </pre>
     *
     * <code>string connection_id = 2 [json_name = "connectionId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearConnectionId() {
      copyOnWrite();
      instance.clearConnectionId();
      return this;
    }
    /**
     * <pre>
     * identifies the connection end on the counterparty chain associated with a
     * given connection.
     * </pre>
     *
     * <code>string connection_id = 2 [json_name = "connectionId"];</code>
     * @param value The bytes for connectionId to set.
     * @return This builder for chaining.
     */
    public Builder setConnectionIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setConnectionIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * commitment merkle prefix of the counterparty chain.
     * </pre>
     *
     * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
     */
    @java.lang.Override
    public boolean hasPrefix() {
      return instance.hasPrefix();
    }
    /**
     * <pre>
     * commitment merkle prefix of the counterparty chain.
     * </pre>
     *
     * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
     */
    @java.lang.Override
    public com.icon.proto.core.commitment.MerklePrefix getPrefix() {
      return instance.getPrefix();
    }
    /**
     * <pre>
     * commitment merkle prefix of the counterparty chain.
     * </pre>
     *
     * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
     */
    public Builder setPrefix(com.icon.proto.core.commitment.MerklePrefix value) {
      copyOnWrite();
      instance.setPrefix(value);
      return this;
      }
    /**
     * <pre>
     * commitment merkle prefix of the counterparty chain.
     * </pre>
     *
     * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
     */
    public Builder setPrefix(
        com.icon.proto.core.commitment.MerklePrefix.Builder builderForValue) {
      copyOnWrite();
      instance.setPrefix(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * commitment merkle prefix of the counterparty chain.
     * </pre>
     *
     * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
     */
    public Builder mergePrefix(com.icon.proto.core.commitment.MerklePrefix value) {
      copyOnWrite();
      instance.mergePrefix(value);
      return this;
    }
    /**
     * <pre>
     * commitment merkle prefix of the counterparty chain.
     * </pre>
     *
     * <code>.icon.proto.core.commitment.MerklePrefix prefix = 3 [json_name = "prefix"];</code>
     */
    public Builder clearPrefix() {  copyOnWrite();
      instance.clearPrefix();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:icon.proto.core.connection.Counterparty)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.icon.proto.core.connection.Counterparty();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "clientId_",
            "connectionId_",
            "prefix_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
              "\u0003\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.icon.proto.core.connection.Counterparty> parser = PARSER;
        if (parser == null) {
          synchronized (com.icon.proto.core.connection.Counterparty.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.icon.proto.core.connection.Counterparty>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:icon.proto.core.connection.Counterparty)
  private static final com.icon.proto.core.connection.Counterparty DEFAULT_INSTANCE;
  static {
    Counterparty defaultInstance = new Counterparty();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      Counterparty.class, defaultInstance);
  }

  public static com.icon.proto.core.connection.Counterparty getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Counterparty> PARSER;

  public static com.google.protobuf.Parser<Counterparty> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

