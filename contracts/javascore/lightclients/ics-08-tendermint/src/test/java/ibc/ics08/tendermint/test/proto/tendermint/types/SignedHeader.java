// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tendermint/types/types.proto

package com.tendermint.types;

/**
 * Protobuf type {@code tendermint.types.SignedHeader}
 */
public  final class SignedHeader extends
    com.google.protobuf.GeneratedMessageLite<
        SignedHeader, SignedHeader.Builder> implements
    // @@protoc_insertion_point(message_implements:tendermint.types.SignedHeader)
    SignedHeaderOrBuilder {
  private SignedHeader() {
  }
  public static final int HEADER_FIELD_NUMBER = 1;
  private com.tendermint.types.Header header_;
  /**
   * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
   */
  @java.lang.Override
  public boolean hasHeader() {
    return header_ != null;
  }
  /**
   * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
   */
  @java.lang.Override
  public com.tendermint.types.Header getHeader() {
    return header_ == null ? com.tendermint.types.Header.getDefaultInstance() : header_;
  }
  /**
   * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
   */
  private void setHeader(com.tendermint.types.Header value) {
    value.getClass();
  header_ = value;
    
    }
  /**
   * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeHeader(com.tendermint.types.Header value) {
    value.getClass();
  if (header_ != null &&
        header_ != com.tendermint.types.Header.getDefaultInstance()) {
      header_ =
        com.tendermint.types.Header.newBuilder(header_).mergeFrom(value).buildPartial();
    } else {
      header_ = value;
    }
    
  }
  /**
   * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
   */
  private void clearHeader() {  header_ = null;
    
  }

  public static final int COMMIT_FIELD_NUMBER = 2;
  private com.tendermint.types.Commit commit_;
  /**
   * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
   */
  @java.lang.Override
  public boolean hasCommit() {
    return commit_ != null;
  }
  /**
   * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
   */
  @java.lang.Override
  public com.tendermint.types.Commit getCommit() {
    return commit_ == null ? com.tendermint.types.Commit.getDefaultInstance() : commit_;
  }
  /**
   * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
   */
  private void setCommit(com.tendermint.types.Commit value) {
    value.getClass();
  commit_ = value;
    
    }
  /**
   * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCommit(com.tendermint.types.Commit value) {
    value.getClass();
  if (commit_ != null &&
        commit_ != com.tendermint.types.Commit.getDefaultInstance()) {
      commit_ =
        com.tendermint.types.Commit.newBuilder(commit_).mergeFrom(value).buildPartial();
    } else {
      commit_ = value;
    }
    
  }
  /**
   * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
   */
  private void clearCommit() {  commit_ = null;
    
  }

  public static com.tendermint.types.SignedHeader parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.tendermint.types.SignedHeader parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.tendermint.types.SignedHeader parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.tendermint.types.SignedHeader parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.tendermint.types.SignedHeader parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.tendermint.types.SignedHeader parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.tendermint.types.SignedHeader parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.tendermint.types.SignedHeader parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.tendermint.types.SignedHeader parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.tendermint.types.SignedHeader parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.tendermint.types.SignedHeader parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.tendermint.types.SignedHeader parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.tendermint.types.SignedHeader prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code tendermint.types.SignedHeader}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.tendermint.types.SignedHeader, Builder> implements
      // @@protoc_insertion_point(builder_implements:tendermint.types.SignedHeader)
      com.tendermint.types.SignedHeaderOrBuilder {
    // Construct using com.tendermint.types.SignedHeader.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
     */
    @java.lang.Override
    public boolean hasHeader() {
      return instance.hasHeader();
    }
    /**
     * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
     */
    @java.lang.Override
    public com.tendermint.types.Header getHeader() {
      return instance.getHeader();
    }
    /**
     * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
     */
    public Builder setHeader(com.tendermint.types.Header value) {
      copyOnWrite();
      instance.setHeader(value);
      return this;
      }
    /**
     * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
     */
    public Builder setHeader(
        com.tendermint.types.Header.Builder builderForValue) {
      copyOnWrite();
      instance.setHeader(builderForValue.build());
      return this;
    }
    /**
     * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
     */
    public Builder mergeHeader(com.tendermint.types.Header value) {
      copyOnWrite();
      instance.mergeHeader(value);
      return this;
    }
    /**
     * <code>.tendermint.types.Header header = 1 [json_name = "header"];</code>
     */
    public Builder clearHeader() {  copyOnWrite();
      instance.clearHeader();
      return this;
    }

    /**
     * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
     */
    @java.lang.Override
    public boolean hasCommit() {
      return instance.hasCommit();
    }
    /**
     * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
     */
    @java.lang.Override
    public com.tendermint.types.Commit getCommit() {
      return instance.getCommit();
    }
    /**
     * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
     */
    public Builder setCommit(com.tendermint.types.Commit value) {
      copyOnWrite();
      instance.setCommit(value);
      return this;
      }
    /**
     * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
     */
    public Builder setCommit(
        com.tendermint.types.Commit.Builder builderForValue) {
      copyOnWrite();
      instance.setCommit(builderForValue.build());
      return this;
    }
    /**
     * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
     */
    public Builder mergeCommit(com.tendermint.types.Commit value) {
      copyOnWrite();
      instance.mergeCommit(value);
      return this;
    }
    /**
     * <code>.tendermint.types.Commit commit = 2 [json_name = "commit"];</code>
     */
    public Builder clearCommit() {  copyOnWrite();
      instance.clearCommit();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:tendermint.types.SignedHeader)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.tendermint.types.SignedHeader();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "header_",
            "commit_",
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\t\u0002\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.tendermint.types.SignedHeader> parser = PARSER;
        if (parser == null) {
          synchronized (com.tendermint.types.SignedHeader.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.tendermint.types.SignedHeader>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:tendermint.types.SignedHeader)
  private static final com.tendermint.types.SignedHeader DEFAULT_INSTANCE;
  static {
    SignedHeader defaultInstance = new SignedHeader();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      SignedHeader.class, defaultInstance);
  }

  public static com.tendermint.types.SignedHeader getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SignedHeader> PARSER;

  public static com.google.protobuf.Parser<SignedHeader> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

