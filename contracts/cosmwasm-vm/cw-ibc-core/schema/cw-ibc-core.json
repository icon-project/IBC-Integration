{
  "contract_name": "cw-ibc-core",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "register_client"
        ],
        "properties": {
          "register_client": {
            "type": "object",
            "required": [
              "client_address",
              "client_type"
            ],
            "properties": {
              "client_address": {
                "$ref": "#/definitions/Addr"
              },
              "client_type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "create_client"
        ],
        "properties": {
          "create_client": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "update_client"
        ],
        "properties": {
          "update_client": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "upgrade_client"
        ],
        "properties": {
          "upgrade_client": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "client_misbehaviour"
        ],
        "properties": {
          "client_misbehaviour": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "connection_open_init"
        ],
        "properties": {
          "connection_open_init": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "connection_open_try"
        ],
        "properties": {
          "connection_open_try": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "connection_open_ack"
        ],
        "properties": {
          "connection_open_ack": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "connection_open_confirm"
        ],
        "properties": {
          "connection_open_confirm": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "channel_open_init"
        ],
        "properties": {
          "channel_open_init": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "channel_open_try"
        ],
        "properties": {
          "channel_open_try": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "channel_open_ack"
        ],
        "properties": {
          "channel_open_ack": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "channel_open_confirm"
        ],
        "properties": {
          "channel_open_confirm": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "channel_close_init"
        ],
        "properties": {
          "channel_close_init": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "channel_close_confirm"
        ],
        "properties": {
          "channel_close_confirm": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "send_packet"
        ],
        "properties": {
          "send_packet": {
            "type": "object",
            "required": [
              "packet"
            ],
            "properties": {
              "packet": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "receive_packet"
        ],
        "properties": {
          "receive_packet": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "acknowledgement_packet"
        ],
        "properties": {
          "acknowledgement_packet": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "write_acknowledgement"
        ],
        "properties": {
          "write_acknowledgement": {
            "type": "object",
            "required": [
              "acknowledgement",
              "packet"
            ],
            "properties": {
              "acknowledgement": {
                "$ref": "#/definitions/HexString"
              },
              "packet": {
                "$ref": "#/definitions/IbcPacket"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "timeout_packet"
        ],
        "properties": {
          "timeout_packet": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "timeout_on_close"
        ],
        "properties": {
          "timeout_on_close": {
            "type": "object",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "bind_port"
        ],
        "properties": {
          "bind_port": {
            "type": "object",
            "required": [
              "address",
              "port_id"
            ],
            "properties": {
              "address": {
                "type": "string"
              },
              "port_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "set_expected_time_per_block"
        ],
        "properties": {
          "set_expected_time_per_block": {
            "type": "object",
            "required": [
              "block_time"
            ],
            "properties": {
              "block_time": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Addr": {
        "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
        "type": "string"
      },
      "Binary": {
        "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
        "type": "string"
      },
      "HexString": {
        "type": "string"
      },
      "IbcEndpoint": {
        "type": "object",
        "required": [
          "channel_id",
          "port_id"
        ],
        "properties": {
          "channel_id": {
            "type": "string"
          },
          "port_id": {
            "type": "string"
          }
        }
      },
      "IbcPacket": {
        "type": "object",
        "required": [
          "data",
          "dest",
          "sequence",
          "src",
          "timeout"
        ],
        "properties": {
          "data": {
            "description": "The raw data sent from the other side in the packet",
            "allOf": [
              {
                "$ref": "#/definitions/Binary"
              }
            ]
          },
          "dest": {
            "description": "identifies the channel and port on the receiving chain.",
            "allOf": [
              {
                "$ref": "#/definitions/IbcEndpoint"
              }
            ]
          },
          "sequence": {
            "description": "The sequence number of the packet on the given channel",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "src": {
            "description": "identifies the channel and port on the sending chain.",
            "allOf": [
              {
                "$ref": "#/definitions/IbcEndpoint"
              }
            ]
          },
          "timeout": {
            "$ref": "#/definitions/IbcTimeout"
          }
        }
      },
      "IbcTimeout": {
        "description": "In IBC each package must set at least one type of timeout: the timestamp or the block height. Using this rather complex enum instead of two timeout fields we ensure that at least one timeout is set.",
        "type": "object",
        "properties": {
          "block": {
            "anyOf": [
              {
                "$ref": "#/definitions/IbcTimeoutBlock"
              },
              {
                "type": "null"
              }
            ]
          },
          "timestamp": {
            "anyOf": [
              {
                "$ref": "#/definitions/Timestamp"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "IbcTimeoutBlock": {
        "description": "IBCTimeoutHeight Height is a monotonically increasing data type that can be compared against another Height for the purposes of updating and freezing clients. Ordering is (revision_number, timeout_height)",
        "type": "object",
        "required": [
          "height",
          "revision"
        ],
        "properties": {
          "height": {
            "description": "block height after which the packet times out. the height within the given revision",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "revision": {
            "description": "the version that the client is currently on (eg. after reseting the chain this could increment 1 as height drops to 0)",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "Timestamp": {
        "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
        "allOf": [
          {
            "$ref": "#/definitions/Uint64"
          }
        ]
      },
      "Uint64": {
        "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
        "type": "string"
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "get_commitment"
        ],
        "properties": {
          "get_commitment": {
            "type": "object",
            "required": [
              "key"
            ],
            "properties": {
              "key": {
                "$ref": "#/definitions/HexString"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_client_registry"
        ],
        "properties": {
          "get_client_registry": {
            "type": "object",
            "required": [
              "_type"
            ],
            "properties": {
              "_type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_client_type"
        ],
        "properties": {
          "get_client_type": {
            "type": "object",
            "required": [
              "client_id"
            ],
            "properties": {
              "client_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_client_implementation"
        ],
        "properties": {
          "get_client_implementation": {
            "type": "object",
            "required": [
              "client_id"
            ],
            "properties": {
              "client_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_connection"
        ],
        "properties": {
          "get_connection": {
            "type": "object",
            "required": [
              "connection_id"
            ],
            "properties": {
              "connection_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_channel"
        ],
        "properties": {
          "get_channel": {
            "type": "object",
            "required": [
              "channel_id",
              "port_id"
            ],
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "port_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_next_sequence_send"
        ],
        "properties": {
          "get_next_sequence_send": {
            "type": "object",
            "required": [
              "channel_id",
              "port_id"
            ],
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "port_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_next_sequence_receive"
        ],
        "properties": {
          "get_next_sequence_receive": {
            "type": "object",
            "required": [
              "channel_id",
              "port_id"
            ],
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "port_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_next_sequence_acknowledgement"
        ],
        "properties": {
          "get_next_sequence_acknowledgement": {
            "type": "object",
            "required": [
              "channel_id",
              "port_id"
            ],
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "port_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_capability"
        ],
        "properties": {
          "get_capability": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_expected_time_per_block"
        ],
        "properties": {
          "get_expected_time_per_block": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_next_client_sequence"
        ],
        "properties": {
          "get_next_client_sequence": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_next_connection_sequence"
        ],
        "properties": {
          "get_next_connection_sequence": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_next_channel_sequence"
        ],
        "properties": {
          "get_next_channel_sequence": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_client_state"
        ],
        "properties": {
          "get_client_state": {
            "type": "object",
            "required": [
              "client_id"
            ],
            "properties": {
              "client_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_consensus_state"
        ],
        "properties": {
          "get_consensus_state": {
            "type": "object",
            "required": [
              "client_id"
            ],
            "properties": {
              "client_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_packet_receipt"
        ],
        "properties": {
          "get_packet_receipt": {
            "type": "object",
            "required": [
              "channel_id",
              "port_id",
              "sequence"
            ],
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "port_id": {
                "type": "string"
              },
              "sequence": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_packet_commitment"
        ],
        "properties": {
          "get_packet_commitment": {
            "type": "object",
            "required": [
              "channel_id",
              "port_id",
              "sequence"
            ],
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "port_id": {
                "type": "string"
              },
              "sequence": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_packet_acknowledgement_commitment"
        ],
        "properties": {
          "get_packet_acknowledgement_commitment": {
            "type": "object",
            "required": [
              "channel_id",
              "port_id",
              "sequence"
            ],
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "port_id": {
                "type": "string"
              },
              "sequence": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "has_packet_receipt"
        ],
        "properties": {
          "has_packet_receipt": {
            "type": "object",
            "required": [
              "channel_id",
              "port_id",
              "sequence"
            ],
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "port_id": {
                "type": "string"
              },
              "sequence": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_all_ports"
        ],
        "properties": {
          "get_all_ports": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_commitment_prefix"
        ],
        "properties": {
          "get_commitment_prefix": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_latest_height"
        ],
        "properties": {
          "get_latest_height": {
            "type": "object",
            "required": [
              "client_id"
            ],
            "properties": {
              "client_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_consensus_state_by_height"
        ],
        "properties": {
          "get_consensus_state_by_height": {
            "type": "object",
            "required": [
              "client_id",
              "height"
            ],
            "properties": {
              "client_id": {
                "type": "string"
              },
              "height": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_packet_heights"
        ],
        "properties": {
          "get_packet_heights": {
            "type": "object",
            "required": [
              "channel_id",
              "end_sequence",
              "port_id",
              "start_sequence"
            ],
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "end_sequence": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "port_id": {
                "type": "string"
              },
              "start_sequence": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_missing_packet_receipts"
        ],
        "properties": {
          "get_missing_packet_receipts": {
            "type": "object",
            "required": [
              "channel_id",
              "end_sequence",
              "port_id",
              "start_sequence"
            ],
            "properties": {
              "channel_id": {
                "type": "string"
              },
              "end_sequence": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "port_id": {
                "type": "string"
              },
              "start_sequence": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_previous_consensus_state_height"
        ],
        "properties": {
          "get_previous_consensus_state_height": {
            "type": "object",
            "required": [
              "client_id",
              "height"
            ],
            "properties": {
              "client_id": {
                "type": "string"
              },
              "height": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "HexString": {
        "type": "string"
      }
    }
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "get_all_ports": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_String",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "get_capability": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_String",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "get_channel": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string"
    },
    "get_client_implementation": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Addr",
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "get_client_registry": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Addr",
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "get_client_state": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string"
    },
    "get_client_type": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string"
    },
    "get_commitment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string"
    },
    "get_commitment_prefix": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string"
    },
    "get_connection": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string"
    },
    "get_consensus_state": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string"
    },
    "get_consensus_state_by_height": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string"
    },
    "get_expected_time_per_block": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "uint64",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "get_latest_height": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "uint64",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "get_missing_packet_receipts": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_uint64",
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      }
    },
    "get_next_channel_sequence": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "uint64",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "get_next_client_sequence": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "uint64",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "get_next_connection_sequence": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "uint64",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "get_next_sequence_acknowledgement": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "uint64",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "get_next_sequence_receive": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "uint64",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "get_next_sequence_send": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "uint64",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "get_packet_acknowledgement_commitment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string"
    },
    "get_packet_commitment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string"
    },
    "get_packet_heights": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Map_of_uint64",
      "type": "object",
      "additionalProperties": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      }
    },
    "get_packet_receipt": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Boolean",
      "type": "boolean"
    },
    "get_previous_consensus_state_height": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_uint64",
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      }
    },
    "has_packet_receipt": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Boolean",
      "type": "boolean"
    }
  }
}
